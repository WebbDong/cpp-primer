#include <iostream>

inline void fun() {
    std::cout << "func" << std::endl;
}

/**
    内联函数
        1、使用inline修饰函数的声明或实现，可以使其成为内联函数
        2、建议声明和实现都添加inline关键字

    特点
        1、使用内联函数，编译器会将函数调用直接展开为函数体代码
        2、可以减少函数调用的开销
        3、会增加代码的体积

    什么时候使用内联函数
        1、函数代码体积不大
        2、频繁调用的函数

    注意
        1、尽量不要内联超过10行代码的函数
        2、即使使用inline，也不一定会被编译器内联，比如递归函数

    内联函数与宏
        1、内联函数和宏，都可以减少函数调用的开销
        2、对比宏，内联函数多了语法检测和函数特性
 * @return
 */
int main() {
    std::cout << "Hello, World!" << std::endl;
    fun();
    return 0;
}
